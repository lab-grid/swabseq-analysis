version: "3.7"
services:
  server:
    # image: labflow/swabseq-analysis-server:latest
    image: labflow/swabseq-analysis-server-example:latest
    build:
      dockerfile: Dockerfile.example
      context: .
      args:
        SERVER_VERSION: local+devcontainer
    command: "python3 -m flask run --host=0.0.0.0 --port=5000"
    environment:
      - FLASK_ENV=development
      - PORT=5000
      - PROPAGATE_EXCEPTIONS=True
      - "SERVER_NAME=${SERVER_NAME}"
      - "AUTH_PROVIDER=${AUTH_PROVIDER}"
      - "AUTH0_DOMAIN=${AUTH0_DOMAIN}"
      - "AUTH0_API_AUDIENCE=${AUTH0_API_AUDIENCE}"
      - "AUTH0_AUTHORIZATION_URL=${AUTH0_AUTHORIZATION_URL}"
      - "AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}"
      - "AUTH0_TOKEN_URL=${AUTH0_TOKEN_URL}"
      - "CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379"
      - "CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379"
    ports:
      - 5000:5000
    volumes:
      - ./.basespace:/root/.basespace
      - ./:/app
  worker:
    # image: labflow/swabseq-analysis-server:latest
    image: labflow/swabseq-analysis-server-example:latest
    build:
      context: .
      dockerfile: Dockerfile.example
      args:
        SERVER_VERSION: local+devcontainer
    command: "python3 -m celery -A script_runner.analysis worker"
    environment:
      - "CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379"
      - "CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379"
      - "COMMAND_RUNDIR_BASE=/base-rundir"
    volumes:
      - ./.basespace:/root/.basespace
      - ./:/app
  redis:
    image: redis:6-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - 6379:6379
